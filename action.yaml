name: Promote Docker Image and Rancher Deploy Action
description: Promote Docker Image and Deploy into Rancher Cluster
author: DA Team <da.team@sherwin.com>
inputs:    
   labels_path:
    description: 'Location of kubernetes labels'
    required: false
    default: 'kubernetes/labels'
   deployment_yaml_path:
     description: 'Location of the deployment.yml file'
     required: false
     default: 'kubernetes/deployment.yml'
   namespace:
     description: 'Rancher namespace'
     required: true
     default: 'gitactions'
   files:
     description: 'Kubernetes files to apply'
     required: false
     default: 'kubernetes/.'
   environment:
     descripton: 'dev, qa, prod'
     required: true
   np_kube_config_data:
     description: 'Kube config for non-prod rancher cluster'
     required: false
#      default: ${{ secrets.KUBE_CONFIG_NP_RANCHER }}
   prod_kube_config_data:
     description: 'Kube config for prod rancher cluster'
     required: false
#      default: ${{ secrets.KUBE_CONFIG_PROD_RANCHER }}
   jf_artifactory_token:
     description: 'Artifactory Auth Token'
     required: true
   image_name:
     description: 'Artifactory Docker image name that need to be promoted to the next environment repo'
     required: false
     default: ${{ github.repository }}
   github_token:
     description: 'GitHub token'
     required: false
     default: ${{ github.token }}
    
runs:
  using: "composite"
  
  steps:
    - name: Get previous env name by environment
      uses: sherwin-williams-co/sw-environment-properties-action@master
      id: prv-env
      with:
        environment: ${{ inputs.environment }}
        
    - name: Retrieve Latest Artifactory Build Tag
      uses: sherwin-williams-co/sw-github-deploydesc-action@main
      id: image_tag
      with:
        repo: ${{ inputs.image_name}}
        gittoken: ${{ inputs.github_token }}
        deployenv: ${{steps.prv-env.outputs.environmentDeployEnvironment}}
         
    - name: Create GitHub deployment
      uses: sherwin-williams-co/sw-deployment-action@main
      id: deployment
      with:
        token: ${{ inputs.github_token }}
        description: "Deploying kubernetes files into Rancher with docker image tag #${{steps.image_tag.outputs.deployment_build_number}}"
        environment: ${{ inputs.environment }}
   
    - name: üè∑ Replace Image Tag
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "@DOCKER_TAG"
        replace: ${{steps.image_tag.outputs.deployment_build_number}}
        include: 'kubernetes/*.yml'
    
    - name: üì¶ Deploy to np rancher cluster
      if: ${{ inputs.environment != 'prod' }}
      uses: sherwin-williams-co/sw-rancher-deploy-action@main
      env:
        KUBE_CONFIG_DATA: ${{ inputs.np_kube_config_data }}
      with:
        files: "-f kubernetes/."
        namespace: ${{ inputs.namespace }}
#         environment: ${{ inputs.environment }}
#         namespace: ${{ inputs.namespace }}
#         kube_config_data: ${{ inputs.np_kube_config_data }}
#         jf_artifactory_token: ${{ inputs.jf_artifactory_token }}
#         image_name: sherwin-williams-co/da-team-workflows
#         image_tag: ${{ steps.image_tag.outputs.deploy_description }}
        
#     - name: üì¶ Deploy to prod rancher cluster
#       if: ${{ inputs.environment == 'prod' }}
#       uses: sherwin-williams-co/sw-rancher-deploy-composite-action@main
#       with:
#         environment: ${ {inputs.environment }}
#         namespace: ${{ inputs.namespace }}
#         kube_config_data: ${{ inputs.prod_kube_config_data }}
#         jf_artifactory_token: ${{ inputs.jf_artifactory_token }}
    
    - name: Docker image promote 
      uses: sherwin-williams-co/sw-promote-docker-image-action@main
      if: ${{ inputs.environment != 'dev' }}
      with:
        environment: ${{ inputs.environment }}
        image_name: ${{ inputs.image_name }}
        image_tag: ${{ steps.image_tag.outputs.deployment_build_number }}
        artifactory_secret: ${{ inputs.jf_artifactory_token }}
      
    - name: Update deployment status (success)
      if: success()
      uses: sherwin-williams-co/sw-deployment-status@master
      with:
        token: ${{ inputs.github_token }}
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id  }}

    - name: Update deployment status (failure)
      if: failure()
      uses: sherwin-williams-co/sw-deployment-status@master
      with:
        token: ${{ inputs.github_token }}
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id  }}
        
branding:
  icon: git-branch
  color: white
